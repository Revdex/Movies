plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.digitu.movies"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/maven/com.google.dagger/dagger/pom.properties'
        exclude 'META-INF/maven/com.google.dagger/dagger/pom.xml'
    }

    dexOptions {
        preDexLibraries true
        javaMaxHeapSize "4g"
    }
    buildFeatures {

        dataBinding true

        // for view binding:
        // viewBinding true
    }
}

dependencies {
    /* Testing */
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation 'androidx.test:runner:1.3.0'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation ("androidx.test.espresso:espresso-core:3.3.0", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    /* KTX */
    implementation "androidx.activity:activity-ktx:1.1.0"
    implementation "androidx.collection:collection-ktx:1.1.0"
    implementation "androidx.core:core-ktx:1.3.2"
    implementation "androidx.fragment:fragment-ktx:1.2.5"
    /* Kotlin */
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin"
    implementation "org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.0.5"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
    /* UI */
    implementation "com.google.android.material:material:$material"
    implementation "androidx.vectordrawable:vectordrawable:1.2.0-alpha02"
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation "androidx.constraintlayout:constraintlayout:$constraint"
    /* Support */
    implementation "androidx.appcompat:appcompat:$support"
    implementation "androidx.multidex:multidex:$multidex"
    /* ViewModel and LiveData */
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-core-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle"
    /* Room */
    implementation "androidx.room:room-ktx:$room"
    annotationProcessor "androidx.room:room-compiler:$room"
    implementation "androidx.room:room-rxjava2:$room"
    androidTestImplementation "androidx.room:room-testing:$room"
    /* Paging */
    implementation "androidx.paging:paging-common-ktx:${paging}"
    implementation "androidx.paging:paging-runtime-ktx:${paging}"
    implementation "androidx.paging:paging-rxjava2-ktx:${paging}"
    /* Navigation */
    implementation "androidx.navigation:navigation-runtime-ktx:${navigation}"
    implementation "androidx.navigation:navigation-fragment-ktx:${navigation}"
    implementation "androidx.navigation:navigation-ui-ktx:${navigation}"
    /* WorkManager */
    implementation "android.arch.work:work-runtime:${workmanager}"
    /* Glide */
    implementation "com.github.bumptech.glide:glide:${glide}"
    annotationProcessor "com.github.bumptech.glide:compiler:${glide}"
    implementation "com.github.bumptech.glide:okhttp3-integration:${glide}"
    /* Retrofit */
    implementation "com.squareup.retrofit2:retrofit:${retrofit}"
    implementation "com.squareup.retrofit2:converter-jackson:${retrofit}"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:${rxretrofit}"
    /* Jackson */
    implementation "com.fasterxml.jackson.core:jackson-core:${jackson}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${jackson}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jackson}"
    /* ReactiveX*/
    implementation "io.reactivex.rxjava2:rxjava:${rxjava}"
    implementation "io.reactivex.rxjava2:rxandroid:${rxandroid}"
    /* Dagger */
    implementation "com.google.dagger:dagger:${dagger}"
    annotationProcessor "com.google.dagger:dagger-compiler:${dagger}"
    compileOnly "javax.annotation:jsr250-api:${javax}"
    /* OKhttp3 */
    implementation "com.squareup.okhttp3:okhttp:${okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${okhttp}"
    implementation "com.squareup.okio:okio:${okio}"

}



